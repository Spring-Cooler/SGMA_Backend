plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
}

ext {
    springCloudVersion = "2023.0.3"
}

group = 'com.springcooler'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.mybatis:mybatis:3.5.6'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    testImplementation 'org.springframework.batch:spring-batch-test'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
//	testImplementation 'org.springframework.security:spring-security-test'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // https://mvnrepository.com/artifact/org.modelmapper/modelmapper
    implementation 'org.modelmapper:modelmapper:3.1.1'

    //swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    //필기. 테스트 코드에서도 롬복 적용(로그 기능 활용을 위한 추가)
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

//필기. jwt 토큰 라이브러리 추가
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-impl
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-jackson
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

//필기. 추후 Oauth2.0,s3,redis 관련 라이브러리 추가 예정

//    //필기. S3 라이브러리 추가
//    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
//
//    //필기 Redis 라이브러리 추가
//    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
//
//    //필기. Mail 라이브러리 추가
//    implementation 'org.springframework.boot:spring-boot-starter-mail'

    //필기. MSA 적용
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    //필기. bootstrap.yml을 인지시키기 위한 dependency
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation("org.springframework.cloud:spring-cloud-starter-bootstrap")

    //필기. spring boot의 모니터링 시스템 또는 동적 설정 변경 등 부가적인 기능 제공
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}